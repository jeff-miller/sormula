# These properties are for tests and examples. They are not required for Sormula.

jdbc.url=jdbc:mariadb://localhost:3306/sormulatest
jdbc.user=sormula
jdbc.password=tester
jdbc.schema=

# configure database to run in ANSI mode so that reserved words can be escaped with double quotes
# https://mariadb.com/kb/en/library/sql-mode/

# some databases do not support SQL IDENTITY type
# use true    for standard identity column declaration of "INTEGER GENERATED ALWAYS AS IDENTITY(START WITH 1)"
# use default for standard identity column declaration of "INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1)"
# use false to skip identity tests
# use custom sql data type for nonstandard identity declarations
testIdentity=INTEGER PRIMARY KEY AUTO_INCREMENT

# true to test non-identity methods  
# false if database always generates identity columns and does not allow identity columns to be overridden 
testIdentityOverride=true

# true to test java.sql.Time
testTime=true

# true to test BigDecimal
testBigDecimal=true

# true to test BIGINT type
testLong=true

# true to use jdbc transaction in tests; false to use default Connection.setAutoCommit
# note: true may cause some tests to fail if tests are run in parallel threads
jdbc.transaction=true

# string to send to database to shut down database
#jdbc.shutdown.sql=

# string to send to driver to shut down database
#jdbc.shutdown.driver=jdbc:derby:test-output/derbydb/test;shutdown=true

# true to use foreign key constraints in DDL
foreignKey=true

# DDL for boolean types
# BIT for sql92
# BOOLEAN for sql99 and later
# CHAR(1), VARCHAR(n) for databases that do not have boolean data types
booleanDDL=BOOLEAN

# controls if batch cascade and batch save operations can be tested (true to test, false not to test)
# true  if java.sql.Statement.executeBatch() returns count of rows affected
# false if java.sql.Statement.executeBatch() returns SUCCESS_NO_INFO
batchReturnsUpdateCount=false

# true to confirm that rollback resets state prior to begin transaction
# false to not run rollback tests
testRollback=true

# if n is supplied use TIME(n) and TIMESTAMP(n) DDL
# if empty then TIME, TIMESTAMP is used in DDL
# MariaDB uses 0 by default, use 4 to match Java's precision for comparing time values 
# see https://mariadb.com/kb/en/library/timestamp/
secondsPrecision=4

# keyword to follow timestamp datatype to allow nulls
# use empty string for none
# https://mariadb.com/kb/en/library/timestamp/#disabling-automatic-properties
timestampNullKeyword=NULL

# database AVG function returns rounded result
avgRounded=false