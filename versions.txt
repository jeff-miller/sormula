Version History

version-jdk             comments
------------------------------------------------------------------------------------------------------------
4.0-jdk1.8              - add default translators for java.time.LocalDate, java.time.LocalTime, java.time.Instant
                        - fix javadoc errors
                        - remove deprecated SormulaField (replaced by RowField)
                        - remove deprecated Table#isLegacyAnnotationPrecedence
                        - remove deprecated newInstance method and constructor from AbstractColumnTranslator
                        - remove deprecated FieldExtractor constructor 
                        - remove deprecated methods getTargetTable and createTargetField from SqlOperation
                        - remove deprecated cascade constructors that used SormulaField 
                        - remove deprecated Row#zeroRowCountPostExecute
                        - update jdbc drivers
                        - add identity column tests for sqlite
                        
            3.5-jdk1.7  - invoke close method within finally block for AutoCloseable classes so that  
                          no resources are leaked if exception occurs 
                        - suppress unnecessary resource leak warnings

            3.4-jdk1.7  - allow choice of method or direct field access or some combination
                          (see Column.fieldAccess and Row.fieldAccess)
                        - cache miss count is recorded correctly
                        - cache.statistics in build.properties for logging cache statistics
                        - evict methods never throw CacheException
                        - remove deprecated get/setWhereTranslator2 methods
                        - remove deprecated org.sormula.operation.SelectCountOperation
                          replacement is org.sormula.operation.aggregate.SelectionCountOperation
                        - deprecate Table.isLegacyAnnotationPrecedence
                        - field access may be direct, getter/setter, or some combination 
                          (add RowField and subclasses, deprecate SormulaField)
                        - deprecate Row.zeroRowCountPostExecute()
                        - select performs cascade if table is cached (bug fix)
                        - primary key status set correctly if setWhere invoked more than once
                        - cache interface and implementations correctly implement save operations
            
            3.3.1-jdk1.7- maven support (bendem)
                        - updated SimpleExample, ActiveRecordExample, and ZeroConfigExample

3.3 jdk1.5  3.3-jdk1.7  - automatic Enum support by default
                        - EnumType and EnumTranslator for reading/writing Enum fields
                        - remove deprecated: WidgetColumnTranslator1, cascade methods, operation methods
                        - SqlOperation getWhereTranslator and setWhereTranslator are now public
                        - remove deprecated RowTranslator(Table<R>) constructor
                        - Table selectCount() and selectCount(String, Object...) new implementation 

3.2-jdk1.5  3.2-jdk1.7  - org.sormula.translator.standard translators can read/write null non-primitive types
                        - fix bug that caused cache exception when Table was created after transaction began 
                        - BenchmarkSuite example to compare Sormula vs. JDBC performance
                        - booleanDDL property in jdbc.properties to allow for varying types for some databases 
                        - jdbc.driver property in jdbc.properties is optional for JDBC 4.0 compliant drivers 
 						
3.1-jdk1.5  3.1-jdk1.7  - SelectCascade#sourceParameterFieldNames can be symbolic name of "#primaryKeyFields" 
                          or "#targetFieldNames" instead of specific fields
                        - SelectCascade#targetWhereName can be symbolic name of "#sourceFieldNames" or 
                          "#foreignKeyValueFields" instead of a specific where condition 
                        - OneToManyCascade has default SelectCascade for simplified configuration
                        - OneToOneCascade has default SelectCascade for simplified configuration
                        - add non-identity insert methods to active record package
                        - fix connection leak for active record lazy selects
                        - SelectCascadeFilter allows filtering algorithms to be written in Java and
                          applied as rows are read from the database 
                        - SqlOperation allows named parameters with setParameter(String, Object)
                        - SelectCascade#sourceParameterFieldNames can refer to a named parameter by prefixing
                          name with dollar ($) symbol

3.0-jdk1.5  3.0-jdk1.7  - caching
                        - TransactionListener
                        - row annotations have precedence over table annotations 
                          (set legacyAnnotationPrecedence=true for pre v3.0 precedence)
                        - remove deprecated 
                        - cascades can set foreign key values and reference on target objects
                        - Row.inheritedFields allows fields in subclasses to be used as columns
                        - Row.selectInitialCapacity configures initial capacity of 
                          collections/maps for select results
                        - Where.selectInitialCapacity configures initial capacity of 
                          collections/maps for select results
                        - SelectOperation.setFetchSize sets PreparedStatement fetch size
                        - Row.fetchSize and Where.fetchSize configures fetch size
                        - Where.maximumRows limits rows read from select operation
                        - SelectOperation implements Iterable to enable SelectOperation
                          objects in for loops
                        - fix bug that cascaded insert, save, update, delete when parent row did
                          not exist in database (see org.sormula.tests.cascade.multilevelfk)
                        - Row.primaryKeyFields as alternate way to specify primary keys
                        - many-to-many examples
                        - named cascades (see org.sormula.tests.cascade.named for example)
                        - non-identity inserts for tables with identity columns
